{"version":3,"sources":["logo.svg","component/Home.js","component/Register.js","component/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","RegistrationForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","lastName","email","phone","username","password","handleSubmit","bind","assertThisInitialized","handleFirstNameChange","handleLastNameChange","handleEmailChange","handlePhoneChange","handleUserNameChange","handlePasswordChange","e","setState","target","value","_this2","preventDefault","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","user","console","log","ok","history","push","catch","err","onSubmit","className","type","id","onChange","React","Component","Login","error","handleUsernameChange","alert","onClick","App","Link","to","Switch","Route","exact","path","component","Register","Redirect","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d17c9d12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n    My Home page!\n  </div>\n);\n\nexport default Home;","import React from 'react'; \n\nexport default class RegistrationForm extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handleUserNameChange = this.handleUserNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);    \n  }\n\n  handleFirstNameChange(e){\n    this.setState({firstName:e.target.value});\n  }\n  handleLastNameChange(e) {\n    this.setState({ lastName: e.target.value });\n  }\n  handleEmailChange(e) {\n    this.setState({ email: e.target.value });\n  }\n  handleUserNameChange(e) {\n    this.setState({ username: e.target.value });\n  }\n  handlePasswordChange(e) {\n    this.setState({ password: e.target.value });\n  }\n  handlePhoneChange(e) {\n    this.setState({ phone: e.target.value });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    fetch('/api/register', { \n      method: 'POST', \n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    }).then(user => {\n      console.log(user)\n      if(!user.ok) return;\n      this.props.history.push('/home')\n    })\n    .catch(err => console.log);\n  }\n\n  render(){\n\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-element\">\n          <label>Email:</label>\n          <input type=\"email\" id=\"email\" value={this.state.email} \n          onChange={this.handleEmailChange}/>\n        </div>\n        <div className=\"form-element\">\n          <label>First Name:</label>\n          <input type=\"text\" id=\"firstName\" value={this.state.firstName} \n          onChange={this.handleFirstNameChange} />\n        </div>\n        <div className=\"form-element\">\n          <label>Last Name:</label>\n          <input type=\"text\" id=\"lastName\" value={this.state.lastName} \n          onChange={this.handleLastNameChange} />\n        </div>\n        <div className=\"form-element\">\n          <label>UserName:</label>\n          <input type=\"text\" id=\"userName\" value={this.state.username} \n          onChange={this.handleUserNameChange} />\n        </div>\n        <div className=\"form-element\">\n          <label>Phone:</label>\n          <input type=\"text\" id=\"phone\" value={this.state.phone} \n          onChange={this.handlePhoneChange} />\n        </div>\n        <div className=\"form-element\">\n          <label>Password:</label>\n          <input type=\"password\" id=\"password\" value={this.state.password} \n          onChange={this.handlePasswordChange} />\n        </div>\n        <input type=\"submit\" id=\"submit\" value=\"Register\"/>\n      </form>\n    );\n  }\n\n}","import React from 'react';\n\nexport default class Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: \"\",\n            error: null\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    }\n    handleSubmit(e){\n        fetch(\"/api/authenticate\",{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\n        }).then((user)=>{\n            if(!user.ok){\n                alert(\"Wrong Credentials\")\n                return;\n            }\n            this.props.history.push('/home')\n        })\n        \n    }\n    handleUsernameChange(e) {\n        this.setState({ username: e.target.value });\n    }\n\n    handlePasswordChange(e) {\n        this.setState({ password: e.target.value });\n    }\n    render(){\n        return (\n            <form>\n                {/* {errorMessage} */}\n                <div className=\"form-element\">\n                <label>Username:</label>\n                <input\n                    id=\"username\" type=\"text\"\n                    value={this.state.username}\n                    onChange={this.handleUsernameChange} />\n                </div>\n        \n                <div className=\"form-element\">\n                <label>Password:</label>\n                <input\n                    id=\"password\" type=\"password\"\n                    value={this.state.password}\n                    onChange={this.handlePasswordChange} />\n                </div>\n                <input id=\"submit\" type=\"button\" value=\"Submit\" onClick={this.handleSubmit}/>\n            </form>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  Link,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport Home from './component/Home';\nimport Register from './component/Register';\nimport Login from './component/Login';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"menu\">\n            <ul>\n              <li> <Link to=\"/login\">Login</Link> </li>\n              <li> <Link to=\"/register\">Register</Link> </li>\n            </ul>\n        </div>\n        <div className=\"App-intro\">\n          <Switch>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/home\" component={Home}/>\n            <Redirect to=\"/login\" />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}